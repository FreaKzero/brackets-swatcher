/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50, browser: true */
/*global define, brackets, $, Mustache */

define(function(require, exports) {
    var EditorManager = brackets.getModule('editor/EditorManager'),

        ColorFragment = require("text!../tpl/ColorTableFragment.html"),

        Modes = require('../modes'),
        Utils = require('./Utils');

    var ColorImporter = {

        registerPanel: function($panel) {
            $panel.on('click', '.swatcher-colortable-colorremove', function() {
                $(this).parent().parent().fadeOut(function() {
                    $(this).remove();
                });
            });

            $panel.on('click', '.swatcher-colortable-import', function() {
                ColorImporter.EditorImport(EditorManager.getFocusedEditor());
            });

            $panel.on('click', '.swatcher-colortable-cancel', function() {
                ColorImporter.exit();
            });
        },

        add: function(hex) {
            var name = 'color' + $('.swatcher-colortable tr').size();

            $('.swatcher-colortable').append(
                Mustache.render(ColorFragment, {
                    colorname: name,
                    colorhex: hex
                })
            );
        },

        EditorImport: function(editor) {
            var str = '';
            var ModesObject = Modes.getMode(editor.document.language._mode);

            $('.swatcher-colortable tr').each(function() {
                if ($(this).data('hex')) {
                    str += ModesObject.trigger + $(this).find('input').val() + ": " + $(this).data('hex') + "; \n";
                }
            });

            str = "\n" + '/* Generated by Brackets Swatcher */' + "\n" + str;
            Utils.insert(editor, str);
            ColorImporter.exit();
        },

        exit: function() {
            $('.swatcher-colortable').empty();
        }
    };

    return ColorImporter;
});
