/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50, browser: true */
/*global define, brackets, $, Mustache */

define(function(require, exports) {
    var EditorManager = brackets.getModule('editor/EditorManager'),

        ColorFragment = require("text!../tpl/ColorTableFragment.html"),

        Modes = require('../modes'),
        Utils = require('./Utils'),
        messages = require('./Messages'),
        registered = false;

    //TODO Implement some sort of "complete reset"

    var ColorImporter = {

        registerPanel: function($panel) {
            if (!registered) {
                $panel.on('click', '.swatcher-colortable-colorremove', function() {
                    $(this).parent().parent().fadeOut(function() {
                        $(this).remove();
                    });
                });

                $panel.on('click', '.swatcher-colortable-import', function() {
                    ColorImporter.EditorImport(EditorManager.getFocusedEditor());
                });

                $panel.on('click', '.swatcher-colortable-cancel', function() {
                    ColorImporter.exit();
                });
                
                registered = true;
            }
        },

        add: function(hex, batch) {
            batch ? batch = batch : batch = false;

            var $colordouble = $(".swatcher-colortable").find("[data-hex='" + hex + "']");

            if ($colordouble.size() > 0 && batch === false) {
                $colordouble.fadeTo(333, 0.3, function() {
                    $colordouble.fadeTo(333, 1);
                });

            } else {

                var name = 'color' + $('.swatcher-colortable tr').size();
                $('.swatcher-colortable').append(
                    Mustache.render(ColorFragment, {
                        colorname: name,
                        colorhex: hex
                    })
                ).children(':last').hide().fadeIn();

                if (batch === false) {
                    $('.swatcher-colortable tr:last').find('input').focus();
                }
            }
        },

        EditorImport: function(editor) {

            if (editor) {
                var str = '';
                var ModesObject = Modes.getMode(editor.document.language._mode);

                if (ModesObject) {
                    $('.swatcher-colortable tr').each(function() {
                        if ($(this).data('hex')) {
                            str += ModesObject.trigger + $(this).find('input').val() + ": " + $(this).data('hex') + "; \n";
                        }
                    });

                    str = "\n" + '/* Generated by Brackets Swatcher */' + "\n" + str;
                    Utils.insert(editor, str);
                } else {
                    messages.dialog('ACO_NOSUPPORT');
                }
            } else {
                messages.dialog('ACO_NOFILE');
            }
        },

        exit: function() {
            $('.swatcher-colortable').empty();
        }
    };

    return ColorImporter;
});
